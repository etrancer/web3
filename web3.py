from web3 import Web3
from web3.middleware import geth_poa_middleware

# RPC-–ø—Ä–æ–≤–∞–π–¥–µ—Ä Sepolia (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Infura, Alchemy, PublicNode)
RPC_URL = "https://ethereum-sepolia-rpc.publicnode.com"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
w3 = Web3(Web3.HTTPProvider(RPC_URL))
w3.middleware_onion.inject(geth_poa_middleware, layer=0)

assert w3.is_connected(), "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Sepolia"
print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
print("Chain ID:", w3.eth.chain_id)
print("–ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞:", w3.eth.block_number)

# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
sender = "0x–í–∞—à–ê–¥—Ä–µ—Å"
private_key = "0x–í–∞—à–ü—Ä–∏–≤–∞—Ç–Ω—ã–π–ö–ª—é—á"
receiver = "0x–ê–¥—Ä–µ—Å–ü–æ–ª—É—á–∞—Ç–µ–ª—è"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
def get_balance(address):
    balance = w3.eth.get_balance(address)
    return w3.from_wei(balance, "ether")

print(f"\nüí∞ –ë–∞–ª–∞–Ω—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ({sender}): {get_balance(sender)} ETH")
print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è ({receiver}): {get_balance(receiver)} ETH")

# –ü–æ–ª—É—á–∏—Ç—å nonce (–∫–æ–ª-–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π)
nonce = w3.eth.get_transaction_count(sender)
print(f"üî¢ Nonce –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {nonce}")

# –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –≥–∞–∑–∞
gas_price = w3.eth.gas_price
print(f"‚õΩ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ –≥–∞–∑–∞: {w3.from_wei(gas_price, 'gwei')} GWei")

# –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ –∞–¥—Ä–µ—Å—É –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏–ª–∏ –æ–±—ã—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç?
code = w3.eth.get_code(receiver)
if code != b'':
    print(f"üì¶ {receiver} ‚Äî –∫–æ–Ω—Ç—Ä–∞–∫—Ç (–¥–ª–∏–Ω–∞ –∫–æ–¥–∞: {len(code)} –±–∞–π—Ç)")
else:
    print(f"üë§ {receiver} ‚Äî –æ–±—ã—á–Ω—ã–π EO–ê –∞–∫–∫–∞—É–Ω—Ç")

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
def send_eth(amount_eth):
    tx = {
        "type": 2,
        "nonce": w3.eth.get_transaction_count(sender),
        "to": receiver,
        "value": w3.to_wei(amount_eth, "ether"),
        "gas": 21000,
        "maxFeePerGas": w3.to_wei(3, "gwei"),
        "maxPriorityFeePerGas": w3.to_wei(1, "gwei"),
        "chainId": w3.eth.chain_id
    }
    signed_tx = w3.eth.account.sign_transaction(tx, private_key)
    tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
    print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {tx_hash.hex()}")
    return tx_hash.hex()

# –û—Ç–ø—Ä–∞–≤–∫–∞ 0.005 ETH
tx_hash = send_eth(0.005)

# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
def get_tx_info(tx_hash):
    receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
    print(f"\nüì¶ –°—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {receipt.status} (1 = —É—Å–ø–µ—Ö)")
    print(f"üîç –ë–ª–æ–∫: {receipt.blockNumber}")
    print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤–∫–ª—é—á–µ–Ω–∏—è: {w3.eth.get_block(receipt.blockNumber).timestamp}")
    print(f"üìç –ì–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: {receipt.gasUsed}")

get_tx_info(tx_hash)

# –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–æ–≤
print(f"\n‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:")
print(f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {get_balance(sender)} ETH")
print(f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {get_balance(receiver)} ETH")
