import os
from web3 import Web3
from web3.middleware import geth_poa_middleware
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

SENDER = os.getenv("SENDER_ADDRESS")
PRIVATE_KEY = os.getenv("PRIVATE_KEY")
RECEIVER = os.getenv("RECEIVER_ADDRESS")

# RPC-–ø—Ä–æ–≤–∞–π–¥–µ—Ä
RPC_URL = "https://ethereum-sepolia-rpc.publicnode.com"
w3 = Web3(Web3.HTTPProvider(RPC_URL))
w3.middleware_onion.inject(geth_poa_middleware, layer=0)

assert w3.is_connected(), "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ç–∏"

def get_balance(address):
    return w3.from_wei(w3.eth.get_balance(address), "ether")

def send_eth(amount_eth):
    nonce = w3.eth.get_transaction_count(SENDER)
    tx = {
        "type": 2,
        "nonce": nonce,
        "to": RECEIVER,
        "value": w3.to_wei(amount_eth, "ether"),
        "gas": 21000,
        "maxFeePerGas": w3.to_wei(3, "gwei"),
        "maxPriorityFeePerGas": w3.to_wei(1, "gwei"),
        "chainId": w3.eth.chain_id
    }
    signed_tx = w3.eth.account.sign_transaction(tx, PRIVATE_KEY)
    tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
    return tx_hash.hex()

# –í—ã–≤–æ–¥
print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Sepolia, chain ID: {w3.eth.chain_id}")
print(f"üí∞ –ë–∞–ª–∞–Ω—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {get_balance(SENDER)} ETH")
print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {get_balance(RECEIVER)} ETH")

# –û—Ç–ø—Ä–∞–≤–∏–º 0.001 ETH
tx_hash = send_eth(0.001)
print(f"üì§ TX –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {tx_hash}")
